{
    "contents" : "##>>>>>>>>>>>>>>>>>>>>>>> the function to do BE \n## INPUT minimal.lm is the minimal model minimal.lm is the full model, FDR.q is a the required FDR, usually 0.05 or 0.20,\n## mfactor should only be used when you do not start with all variants you have. \nBEFDR <- function(minimal.lm, maximal.lm, FDR.q, mfactor){\n  #This function remains the same for FS & BE\n  compute.Lambda<-function(k, m, Q) {i<-c(1:k)\n  return( (1/(k+1)) * sum(qnorm((Q/2) * (i/(m+1-i*(1-Q))))^2))  }\n  \n  #This function remains the same for FS & BE  \n  get.model.size <- function(a.lm) {require(MASS);\n    return(extractAIC(a.lm)[1]-1) }\n  \n  require(MASS);\n  \n  #Scope remains the same for FS & BE\n  the.scope <- list(lower = minimal.lm, upper = maximal.lm)\n  # Size of maximal.lm multiplied by mfactor \n  # as BE procedure is initiated when 1/mfactor of all the genotyped regions are already removed\n  # need to correct for all the tests that are actually performed when building\n  # the final model\n  m <- mfactor*get.model.size(maximal.lm) \n  new.model.size <- get.model.size(maximal.lm)\n  for (i in 1:m)\n  {\n    #test i <- 3\n    old.model.size <- new.model.size\n    Lambda <- compute.Lambda(k = old.model.size-1, m, Q = FDR.q)\n    \n    new.model <- stepAIC(maximal.lm, direction=\"backward\", scope=the.scope, k=Lambda, trace=FALSE)\n    new.model.size <- get.model.size(new.model);\n    \n    if (new.model.size >= old.model.size) break;\n  }\n  new.lm <- lm(new.model)\n  return(new.lm) }\n\n\n##example\n#required data please load the Rdata I sent to you(161012.RData)\nload(\"~/Desktop/161012.RData\")\n# Demo data included in 161012.RData\n#1 sigMrk is some SNPs that captures the polygenic backgroud, so I would like to keep them as fixed effect, which means they will be kept in the minimal model\n#2 mrksT is the set of markers I want to do BE on \n#3 mrk_geno, is the genotype matrix\n#4 phe is a vector contains phenotype\n#5 fx1 is a vector contains sex\n# mrk_info is a matrix contains the name and location of all the marker\n\n###>>>>>>>>>>>>> below are the code to construct maximum model and minmodel for the BE\n\n    sigMrk_sub<- sigMrk[!(sigMrk %in% mrksT)] # this is the fixed effect we want to keep in the minimal model\n    # find the id without missing values\n    colnames(mrk_geno)<- mrks_info[,1]\n    nna<-complete.cases(mrk_geno[,mrks_info[,1] %in% c(mrksT,sigMrk_sub)])\n    geno_reg<-mrk_geno[nna,c(mrksT,sigMrk_sub)] ## pick out the genotype info for all the included marker\n    \n    # construct full model including all markers within the reg\n    id.full<- which(colnames(geno_reg) %in% c(mrksT,sigMrk_sub))\n    geno_add <- paste(\"as.numeric(geno_reg[,\",id.full,\"])\",sep=\"\",collapse=\"+\")\n    test_phe<-phe[nna]\n    test_fx1<-fx1[nna]\n    fm <- as.formula(paste(\"test_phe ~ test_fx1 +\",geno_add,sep=\"\"))\n    reg.lm <- lm(fm, y=TRUE)\n    \n    # min model\n    id.min<-c(1:ncol(geno_reg))[colnames(geno_reg) %in% sigMrk_sub]\n    geno_bc.add<-paste(\"as.numeric(geno_reg[,\",id.min,\"])\",sep=\"\",collapse=\"+\")\n    fm.min<- as.formula(paste(\"test_phe ~ test_fx1 +\",geno_bc.add,sep=\"\"))\n    min.lm <- lm(fm.min,y=TRUE)\n    \n    #Perform Backward-Elimination in the original data at different adaptive FDR thresholds\n    fitFDR5 <- BEFDR( minimal.lm = min.lm, maximal.lm = reg.lm, FDR.q = 0.05,mfactor=1)\n    \n    ### get out the name of kept snp\n    if(sum(grepl(\"geno_reg\",rownames(summary(fitFDR5)$coefficients)))>0){\n      terms5<-rownames(summary(fitFDR5)$coefficients)[grep(\"geno_reg\",rownames(summary(fitFDR5)$coefficients))]\n      idx5<-unlist(strsplit(terms5,\",|[]]\"))\n      name5<-colnames(geno_reg)[as.numeric(idx5[seq(2,length(idx5),3)])]\n      id.in5<- name5[!(name5%in% sigMrk_sub)] # this is the maker pass the FDR\n    }\n    \n    \n\n",
    "created" : 1484819384115.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3319303652",
    "id" : "D17E9F51",
    "lastKnownWriteTime" : 1484817393,
    "path" : "~/Dropbox/home_bin/161012_BE.example.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}